1.首页－静态页
	请求方式:	GET
	请求url:	/pc_home

	请求参数:	

	返回参数:
			返回视图：pc.home

2.首页－甑选推荐
	请求方式:	GET
	请求url:	/pc_home/recommend

	请求参数:	
			per_page 		每页数
			page 			第几页

	返回参数:
			gifts:[
				{
					photo_url,		图片链接
					info_url, 		礼物id
					title,			礼物标题
					price,			价格
					focus,			是否收藏（1=收藏，0=没有收藏）
				}
			]
			total: 					总共多少页

3.首页－专题
	请求方式:	GET
	请求url:	/pc_home/topic

	请求参数:	
			per_page 		每页数
			page 			第几页

	返回参数:
			
			topics:[
				{
					id,				专题id
					topic_url		专题图片链接
				}
			]
			total: 					总共多少页

4.首页－热门话题
	请求方式:	GET
	请求url:	/pc_home/article

	请求参数:	
			per_page 		每页数
			page 			第几页

	返回参数:
			articles:[
				{
				id，					话题id
				title,				标题
				scan_num,			浏览人数
				join_num,			参与话题人数
				url,				图片
				}
			]
			total: 					总共多少页

5.个人信息静态页
	请求方式: GET
	请求url: /site

	请求参数:

	返回参数:
			视图

6.个人信息设置
	请求方式: POST
	请求url: /site

	请求参数:	
			username,			 用户名
			avatar,				 头 像
			gender,				 性别
			birthday,			 生日
			constellation,		 星座
			postion,			 职业
			info,				 个性签名
	返回参数:
			{
				errcCode,		 错误码（0正常）			
				message, 		 信息
			}

7. 选礼标签
	请求方式:	GET
	请求url:	/pc_election/label

	请求参数:	

	返回参数:
			返回视图：pc.search
			{
			_char:[
				id,					标签id
				cahr_id,			排序用id
				_class,				标签名
			]
			scene:[
				id,					标签id
				scene_id,			排序用id
				_class,				标签名			
			]
			object:[
				id,					标签id
				object_id,			排序用id
				_class,				标签名
			]
			price:[
				id,					标签id
				price_id,			排序用id
				_class,				标签名
			]	
			}

8.通过标签选礼
	请求方式: POST
	请求url: /pc_election/selection_by_label

	请求参数:
			per_page, 				每页多少个
			page,					第几页
			_char,					赠送对象id				
			scene,					场合id	
			object, 				个性id
			price,					价格id

	返回参数:
			{
			errcCode,
			message,
			gifts:{
					[
						id， 		
						title,		礼品名称
						price,		价格
						focus,		1=收藏，0=没有
						url,        礼品图片
						taobao_url 	购买链接
					]....
				}
			total, 					总共多少页
			}

9.我收藏过的商品
	请求方式: GET
	请求方式: /pc_mime/like_gift

	请求参数:
			per_page, 				每页多少个
			page,					第几页

	返回参数:
			{
			errcCode,
			message,
			gifts:{
					[
						id
						title,		礼品名称
						price,		价格
						img,        礼品图片
						taobao_url 	购买链接
					]....
				}
			total, 					总共多少页
			}

10.我参与过的话题
	请求方式: GET
	请求方式: /pc_mime/join_article

	请求参数:
			per_page, 				每页多少个
			page,					第几页
	返回参数:
			{
			errcCode,
			message,
			articles:{
					[
						id
						title,		话题名称
						img,        话题图片
						scan_num,	浏览人数
						join_num	参与人数
					]....
				}
			total, 					总共多少页
			}

11.收藏话题
	请求方式:	POST
	请求url:	/article/article_collection

	请求参数:	
			article_id 				话题id
	返回参数:
			{
			errcCode,				错误码
			message,				错误信息
			}

12.收藏参与话题
	请求方式:	POST
	请求url:	/article/join_collection

	请求参数:		
			join_id 				参与话题id

	返回参数:
			{
			errcCode,				错误码
			message,				错误信息
			}

13.收藏礼品
	请求方式:	POST
	请求url:	/home/collection

	请求参数:	
			gift_id   				礼品id
	返回参数:
			{
			errcCode,				错误码
			message,				错误信息
			}

14.专题详情页
	请求方式:	GET
	请求url:	/detail/topic

	请求参数:	
			topic_id 				专题id
	返回参数 :	
			topic:{
					title,			专题标题
					content,		专题内容
					topic_url,		专题图片
					scan_num,	 	浏览人数
					focus_num 		关注人数
				}
			gifts:[
				{
				id 					礼品id
				title,				礼品名称
				price,				价格
				content,			礼品描述
				img,				图片
				scan_num,			浏览人数
				focus_num 			收藏人数
				taobao_url 			查看详情处链接
				}...	
			]

15.话题页-文章
	请求方式:	GET
	请求url:	/detail/article

	请求参数:	
			article_id 				话题id
	返回参数:
				article:{
					id, 			话题id
					title,			题目	
					scan_num,		浏览人数
					join_num,		参与话题人数
					focus_num,		收藏人数
				}
				article_parts:[
					{
					content,		内容	
					type,			text／url
					}...
				]

16.话题页中参与话题简讯
	请求方式:	GET
	请求url:	/detail/bre_join

	请求参数:	
			article_id,	 			话题id
			per_page,				每页数
			page,					第几页


	返回参数:
			article_joins:[
				{
					id, 			id
					username,		用户名
					avatar,			头像
					text,		
					imgs:[	
						{
									图片链接
						}...
					]

				}...
			]

17.参与话题详情
	请求方式:	GET
	请求url:	/detail/join_detail

			join_id,	 					话题id

	返回参数:
			article_join:{
				id ， 						参与话题详情
				scan_num,					浏览人数
				join_num， 					参与话题人数
				focus_num， 					收藏人数
			}
			article_join_parts:[
						{
						content,			内容
						type,				text/url
						}...
			]

18.获取评论
	请求方式:	GET
	请求url:	/detail/join_com

			join_id,	 					话题id
			per_page,						每页数
			page,							第几页

	返回参数:
			join_coms:[
					{
					id,						评论id
					username,				用户名
					avatar,					头像
					content,				内容
					replys:[
						{	
							reply_name,		回复名称
							content 		内容
						}
						]
					}...
			]


<-------------------------------------------------------------------->
<----------------------参与话题的评论和回复接口与app端一致----------------->
<-------------------------------------------------------------------->
	5.1 评论参与话题 
		请求方式:	POST
		请求url:	/article/comment

		请求参数:	
				join_id					参与话题id
				content 				话题内容
		返回参数 :

				{
					errCode:xxx,		错误码	0表示返回正常	 
					message:xxx		提示信息
				}
	
	5.2 删除评论参与话题
		请求方式:	POST
		请求url:	/article/dcomment

		请求参数:	
				com_id				评论id
		返回参数 :

				{
					errCode:xxx,		错误码	0表示返回正常	 
					message:xxx		提示信息
				}

	6.1 回复参与话题的评论
		请求方式:	POST
		请求url:	/article/reply

		请求参数:	
				com_id， 			评论的id
				content， 			内容
		返回参数 :

				{
					errCode:xxx,		错误码	0表示返回正常	 
					message:xxx		提示信息
				}

	6.2 删除回复
		请求方式:	POST
		请求url:	/article/dreply

		请求参数:	
				reply_id，			回复的id
				
		返回参数 :

				{
					errCode:xxx,		错误码	0表示返回正常	 
					message:xxx		提示信息
				}
<-------------------------------------------------------------------->
<----------------------参与话题的评论和回复接口与app端一致----------------->
<-------------------------------------------------------------------->

{"content":[{"text":"hehehe"}],"article_id":1}

收藏专题
		请求方式:	post
		请求url:	/home/topicCollection

		请求参数:	 
				 topic_id 			专题id

		返回参数 :	
				
				｛
					errCode:xxx,	错误码	0表示返回正常	 
					message:xxx		提示信息
				｝
	









